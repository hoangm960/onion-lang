(def binary_search (arr target) 
    (let left 0)
    (let right (- (len arr) 1))
    (while (<= left right)
        #(print "right before: ") (print right)
        (let mid (// (+ left right) 2))
        #(print "mid: ") (print mid)
        (let mid_val (id mid arr))
        (if (== mid_val target)
            (return mid)
            (elif (> mid_val target)
            (
                (let right (- mid 1))
                #(print "right after") 
                #(print right)
            ))
            (else
            (
                (let left (+ mid 1))
                #(print "left after") (print left)
            ))
        )
    )
    (return -1)
)
(let a (list 1 2 2 3 4 5 8 7))
#(print (binary_search a 8))
#(print (binary_search a 123))
#(print (binary_search a -3))
#(print (binary_search a 44))
(loop i range (0 (- (len a) 1) 1)
    (print (binary_search a (id i a)))
)
