# Test list operations with complex expressions

# Define a function that returns a list
(def make_list()
  (return (list 1 2 3))
)

# Create list variables
(let a (list 10 20 30))
(let b (list 40 50 60))

# Try head with a variable
(print (head a))  # Should print 10

# Try head with a function call
(print (head (make_list)))  # Should print 1

# Try tail with a variable
(print (tail a))  # Should print [20, 30]

# Try getid with an index expression
(print (getid (+ 1 0) a))  # Should print 20

# Create a nested list
(let nested (list a b))

# Try head with a nested list
(print (head nested))  # Should print [10, 20, 30]

# Try getid with a nested list and then apply head
(let inner (getid 1 nested))
(print (head inner))  # Should print 40 