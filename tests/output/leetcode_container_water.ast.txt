# AST for leetcode_container_water.onion

program:
 statement:
  statementType:
   functionDef:
    def:
    max_water:
    heights:
    block:
     statement:
      statementType:
       assignment:
        let:
        size:
        expression:
         compoundExpr:
          listOpExpr:
           sizeof:
           expression:
            heights
     statement:
      statementType:
       assignment:
        let:
        res:
        expression:
         literal:
          0
     statement:
      statementType:
       assignment:
        let:
        left:
        expression:
         literal:
          0
     statement:
      statementType:
       assignment:
        let:
        right:
        expression:
         compoundExpr:
          arithmeticExpr:
           -:
           expression:
            size
           expression:
            literal:
             1
     statement:
      statementType:
       loopStatement:
        while:
        expression:
         compoundExpr:
          booleanExpr:
           <:
           expression:
            left
           expression:
            right
        block:
         statement:
          statementType:
           assignment:
            let:
            left_height:
            expression:
             compoundExpr:
              listOpExpr:
               getid:
               expression:
                left
               expression:
                heights
         statement:
          statementType:
           assignment:
            let:
            right_height:
            expression:
             compoundExpr:
              listOpExpr:
               getid:
               expression:
                right
               expression:
                heights
         statement:
          statementType:
           assignment:
            let:
            width:
            expression:
             compoundExpr:
              arithmeticExpr:
               -:
               expression:
                right
               expression:
                left
         statement:
          statementType:
           assignment:
            let:
            min_height:
            expression:
             compoundExpr:
              ternaryExpr:
               if:
               expression:
                compoundExpr:
                 booleanExpr:
                  <:
                  expression:
                   left_height
                  expression:
                   right_height
               expression:
                left_height
               ::
               expression:
                right_height
         statement:
          statementType:
           assignment:
            let:
            area:
            expression:
             compoundExpr:
              arithmeticExpr:
               *:
               expression:
                width
               expression:
                min_height
         statement:
          statementType:
           ifExpr:
            if:
            expression:
             compoundExpr:
              booleanExpr:
               >:
               expression:
                area
               expression:
                res
            statement:
             statementType:
              assignment:
               let:
               res:
               expression:
                area
         statement:
          statementType:
           ifExpr:
            if:
            expression:
             compoundExpr:
              booleanExpr:
               <:
               expression:
                left_height
               expression:
                right_height
            statement:
             statementType:
              incDecStmt:
               inc:
               left
          <missing:
          '
          '>
         statement:
          statementType:
           incDecStmt:
            dec:
            right
 statement:
  statementType:
   returnStmt:
    return:
    expression:
     res
statement:
 statementType:
  assignment:
   let:
   heights1:
   expression:
    compoundExpr:
     listExpr:
      list:
      expression:
       literal:
        1
      expression:
       literal:
        8
      expression:
       literal:
        6
      expression:
       literal:
        2
      expression:
       literal:
        5
      expression:
       literal:
        4
      expression:
       literal:
        8
      expression:
       literal:
        3
      expression:
       literal:
        7
statement:
 statementType:
  printStatement:
   print:
   expression:
    literal:
     "Test:
     Case:
     1:"
statement:
 statementType:
  printStatement:
   print:
   expression:
    heights1
statement:
 statementType:
  printStatement:
   print:
   expression:
    compoundExpr:
     callExpr:
      max_water:
      expression:
       heights1
statement:
 statementType:
  assignment:
   let:
   heights2:
   expression:
    compoundExpr:
     listExpr:
      list:
      expression:
       literal:
        1
      expression:
       literal:
        1
statement:
 statementType:
  printStatement:
   print:
   expression:
    literal:
     "Test:
     Case:
     2:"
statement:
 statementType:
  printStatement:
   print:
   expression:
    heights2
statement:
 statementType:
  printStatement:
   print:
   expression:
    compoundExpr:
     callExpr:
      max_water:
      expression:
       heights2
statement:
 statementType:
  assignment:
   let:
   heights3:
   expression:
    compoundExpr:
     listExpr:
      list:
      expression:
       literal:
        4
      expression:
       literal:
        3
      expression:
       literal:
        2
      expression:
       literal:
        1
      expression:
       literal:
        4
statement:
 statementType:
  printStatement:
   print:
   expression:
    literal:
     "Test:
     Case:
     3:"
statement:
 statementType:
  printStatement:
   print:
   expression:
    heights3
statement:
 statementType:
  printStatement:
   print:
   expression:
    compoundExpr:
     callExpr:
      max_water:
      expression:
       heights3
statement:
 statementType:
  assignment:
   let:
   heights4:
   expression:
    compoundExpr:
     listExpr:
      list:
      expression:
       literal:
        1
      expression:
       literal:
        2
      expression:
       literal:
        1
statement:
 statementType:
  printStatement:
   print:
   expression:
    literal:
     "Test:
     Case:
     4:"
statement:
 statementType:
  printStatement:
   print:
   expression:
    heights4
statement:
 statementType:
  printStatement:
   print:
   expression:
    compoundExpr:
     callExpr:
      max_water:
      expression:
       heights4
<EOF>
