# AST for leetcode2.onion

program:
 statement:
  statementType:
   functionDef:
    def:
    combinationSum:
    candidates:
     target
    block:
     statement:
      statementType:
       assignment:
        let:
        result:
        expression:
         compoundExpr:
          listExpr:
           list
     statement:
      statementType:
       assignment:
        let:
        current:
        expression:
         compoundExpr:
          listExpr:
           list
     statement:
      statementType:
       functionDef:
        def:
        backtrack:
        start:
         target
        block:
         statement:
          statementType:
           ifStmt:
            if:
            expression:
             compoundExpr:
              booleanExpr:
               ==:
               expression:
                target
               expression:
                literal:
                 0
            block:
             Found:
             a:
             combination:
             append:
             a:
             COPY:
             of:
             current:
             to:
             result
          <missing:
          '
          '>
         statement:
          statementType:
           appendStmt:
            append:
            result:
            expression:
             current
      Assumes:
      a:
      copy:
      function:
      exists:
      No:
      return:
      needed:
      here:
      just:
      proceed:
      after:
      adding:
      the:
      combination
      statement:
       statementType:
        <missing:
        '
       '>
   <missing:
   '
  '>
  statement:
  statement:
   else:
   statement:
    statementType:
     ifStmt:
      if:
      expression:
       compoundExpr:
        booleanExpr:
         >:
         expression:
          target
         expression:
          literal:
           0
      block:
       statement:
        statementType:
         loopStatement:
          loop:
          i:
          range:
          expression:
           compoundExpr:
            listOpExpr:
             sizeof:
             expression:
              candidates
          block:
           statement:
            statementType:
             appendStmt:
              append:
              current:
              expression:
               compoundExpr:
                listOpExpr:
                 getid:
                 expression:
                  i
                 expression:
                  candidates
           statement:
            statementType:
             expression:
              backtrack
            i
         <missing:
         '
        '>
     <missing:
     '
    '>
    statement:
    statement:
     -:
      target
     statement:
     statement:
      getid:
       i:
       candidates
   statement:
    statementType:
     assignment:
      let:
      current:
      expression:
       compoundExpr:
        listOpExpr:
         tail:
         expression:
          current
