# AST for leetcode2.onion

program:
 statement:
  statementType:
   functionDef:
    def:
    combinationSum:
    candidates:
     target
    block:
     statement:
      statementType:
       assignment:
        let:
        result:
        expression:
         compoundExpr:
          listExpr:
           list
     statement:
      statementType:
       assignment:
        let:
        current:
        expression:
         compoundExpr:
          listExpr:
           list
     statement:
      statementType:
       functionDef:
        def:
        backtrack:
        target:
        block:
         statement:
          statementType:
           ifExpr:
            if:
            expression:
             compoundExpr:
              booleanExpr:
               ==:
               expression:
                target
               expression:
                literal:
                 0
            statement:
             statementType:
              appendStmt:
               append:
               result:
               expression:
                compoundExpr:
                 callExpr:
                  copy:
                  expression:
                   current
            else:
             statement:
              statementType:
               ifExpr:
                if:
                expression:
                 compoundExpr:
                  booleanExpr:
                   >:
                   expression:
                    target
                   expression:
                    literal:
                     0
                statement:
                 statementType:
                  loopStatement:
                   loop:
                   i:
                   range:
                   expression:
                    literal:
                     1
                   expression:
                    compoundExpr:
                     listOpExpr:
                      sizeof:
                      expression:
                       candidates
                   expression:
                    literal:
                     1
                   block:
                    statement:
                     statementType:
                      appendStmt:
                       append:
                       current:
                       expression:
                        compoundExpr:
                         listOpExpr:
                          getid:
                          expression:
                           i
                          expression:
                           candidates
                    statement:
                     statementType:
                      expression:
                       backtrack
                     i
                     statement:
                      statementType:
                       -:
                       expression:
                        target
                      <missing:
                      '
                      '>
                     statement:
                      statementType:
                       getid:
                       expression:
                        i
                      candidates
            <missing:
            '
           '>
          statement:
           statementType:
            assignment:
             let:
             current:
             expression:
              compoundExpr:
               listOpExpr:
                tail:
                expression:
                 current
statement:
 statementType:
  expression:
   backtrack
 0:
 target
statement:
 statementType:
  returnStmt:
   return:
   expression:
    result
